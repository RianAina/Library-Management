openapi: '3.0.2'
info:
  title: API Library
  version: '1.0'
  description: STD22074
servers:
  - url: https://libraryForBooks.com
paths:
  /books:
    get:
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: fromReleaseDate
          description: Filter books by release date starting from this date
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: toReleaseDate
          description: Filter books by release date ending before this date
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CrupdateBook'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

  /books/authors:
    put:
      summary: Attach an Author to Books
      operationId: attachAuthorToBooks
      requestBody:
        description: List of Book and Author IDs to associate
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateBookAuthor'
      responses:
        204:
          description: The author was successfully attached to the book(s)

  /books/{bookId}/authors/{authorId}:
    put:
      summary: Associate an Author with a Book
      operationId: associateAuthorWithBook
      parameters:
        - in: path
          name: bookId
          description: The ID of the book to associate with the author
          required: true
          schema:
            type: string
        - in: path
          name: authorId
          description: The ID of the author to associate with the book
          required: true
          schema:
            type: string
      responses:
        204:
          description: The author was successfully associated with the book

  /authors:
    get:
      summary: Get all authors
      operationId: getAuthors
      parameters:
        - in: query
          name: authorName
          description: The returned authors are ordered by updated datetime.
          schema: 
            type: string
          required: false
      responses:
        200:
          description: The list of filtered authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    put:
      summary: Create or update a list of authors
      operationId: crupdateAuthors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Author'
      responses:
        200:
          description: The list of created or updated authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    delete:
      summary: Delete author(s)
      description: Deletes one or more authors by ID(s).
      operationId: deleteAuthors
      requestBody:
        description: List of author IDs to delete
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        204:
          description: The author(s) were successfully deleted

components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sex:
          type: string
          enum:
            - M
            - F
    Book:
      allOf:
        - $ref: '#/components/schemas/CrupdateBook'
        - properties:
            author:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                sex:
                  type: string
                  enum:
                    - M
                    - F
    CrupdateBook:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date
    UpdateBookAuthor:
      type: object
      properties:
        bookId:
          type: string
        authorId:
          type: string
